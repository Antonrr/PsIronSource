<?xml version="1.0" encoding="utf-8"?>
<root xmlns:android="http://schemas.android.com/apk/res/android">
	<trace enable="true"/>

  <androidManifestUpdates>
    <addPermission android:name="android.permission.INTERNET"/>
	<addPermission android:name="android.permission.ACCESS_NETWORK_STATE"/>

    <setElement result="ControllerActivity" value="activity" />
	<addAttribute tag="$ControllerActivity" name="android:name" value="com.ironsource.sdk.controller.ControllerActivity" />
	<addAttribute tag="$ControllerActivity" name="android:configChanges" value="orientation|screenSize" />
	<addAttribute tag="$ControllerActivity" name="android:hardwareAccelerated" value="true" />
	<addElement tag="application" name="ControllerActivity" />

	<setElement result="InterstitialActivity" value="activity" />
	<addAttribute tag="$InterstitialActivity" name="android:name" value="com.ironsource.sdk.controller.InterstitialActivity" />
	<addAttribute tag="$InterstitialActivity" name="android:configChanges" value="orientation|screenSize" />
	<addAttribute tag="$InterstitialActivity" name="android:hardwareAccelerated" value="true" />
	<addAttribute tag="$InterstitialActivity" name="android:theme" value="@android:style/Theme.Translucent" />
	<addElement tag="application" name="InterstitialActivity" />

	<setElement result="OpenUrlActivity" value="activity" />
	<addAttribute tag="$OpenUrlActivity" name="android:name" value="com.ironsource.sdk.controller.OpenUrlActivity" />
	<addAttribute tag="$OpenUrlActivity" name="android:configChanges" value="orientation|screenSize" />
	<addAttribute tag="$OpenUrlActivity" name="android:hardwareAccelerated" value="true" />
	<addAttribute tag="$OpenUrlActivity" name="android:theme" value="@android:style/Theme.Translucent" />
	<addElement tag="application" name="OpenUrlActivity" />

	<setElement result="AudienceNetworkActivity" value="activity" />
	<addAttribute tag="$AudienceNetworkActivity" name="android:name" value="com.facebook.ads.AudienceNetworkActivity" />
	<addAttribute tag="$AudienceNetworkActivity" name="android:configChanges" value="keyboardHidden|orientation|screenSize" />
	<addAttribute tag="$AudienceNetworkActivity" name="android:hardwareAccelerated" value="true" />
	<addElement tag="application" name="AudienceNetworkActivity" />

	<setElement result="AdUnitActivity" value="activity" />
	<addAttribute tag="$AdUnitActivity" name="android:name" value="com.unity3d.ads.adunit.AdUnitActivity" />
	<addAttribute tag="$AdUnitActivity" name="android:configChanges" value="fontScale|keyboard|keyboardHidden|locale|mnc|mcc|navigation|orientation|screenLayout|screenSize|smallestScreenSize|uiMode|touchscreen" />
	<addAttribute tag="$AdUnitActivity" name="android:hardwareAccelerated" value="true" />
	<addAttribute tag="$AdUnitActivity" name="android:theme" value="@android:style/Theme.NoTitleBar.Fullscreen" />
	<addElement tag="application" name="AdUnitActivity" />

	<setElement result="AdUnitSoftwareActivity" value="activity" />
	<addAttribute tag="$AdUnitSoftwareActivity" name="android:name" value="com.unity3d.ads.adunit.AdUnitSoftwareActivity" />
	<addAttribute tag="$AdUnitSoftwareActivity" name="android:configChanges" value="fontScale|keyboard|keyboardHidden|locale|mnc|mcc|navigation|orientation|screenLayout|screenSize|smallestScreenSize|uiMode|touchscreen" />
	<addAttribute tag="$AdUnitSoftwareActivity" name="android:hardwareAccelerated" value="true" />
	<addAttribute tag="$AdUnitSoftwareActivity" name="android:theme" value="@android:style/Theme.NoTitleBar.Fullscreen" />
	<addElement tag="application" name="AdUnitSoftwareActivity" />

	<setElement result="TJAdUnitActivity" value="activity" />
	<addAttribute tag="$TJAdUnitActivity" name="android:name" value="com.tapjoy.TJAdUnitActivity" />
	<addAttribute tag="$TJAdUnitActivity" name="android:configChanges" value="orientation|keyboardHidden|screenSize" />
	<addAttribute tag="$TJAdUnitActivity" name="android:hardwareAccelerated" value="true" />
	<addAttribute tag="$TJAdUnitActivity" name="android:theme" value="@android:style/Theme.Translucent.NoTitleBar.Fullscreen" />
	<addElement tag="application" name="TJAdUnitActivity" />

	<setElement result="ActionHandler" value="activity" />
	<addAttribute tag="$ActionHandler" name="android:name" value="com.tapjoy.mraid.view.ActionHandler" />
	<addAttribute tag="$ActionHandler" name="android:configChanges" value="orientation|keyboardHidden|screenSize" />
	<addElement tag="application" name="ActionHandler" />

	<setElement result="Browser" value="activity" />
	<addAttribute tag="$Browser" name="android:name" value="com.tapjoy.mraid.view.Browser" />
	<addAttribute tag="$Browser" name="android:configChanges" value="orientation|keyboardHidden|screenSize" />
	<addElement tag="application" name="Browser" />

	<setElement result="TJContentActivity" value="activity" />
	<addAttribute tag="$TJContentActivity" name="android:name" value="com.tapjoy.TJContentActivity" />
	<addAttribute tag="$TJContentActivity" name="android:configChanges" value="orientation|keyboardHidden|screenSize" />
	<addAttribute tag="$TJContentActivity" name="android:hardwareAccelerated" value="true" />
	<addAttribute tag="$TJContentActivity" name="android:theme" value="@android:style/Theme.Translucent.NoTitleBar" />
	<addElement tag="application" name="TJContentActivity" />
  </androidManifestUpdates>

  <proguardAdditions>
		<insert>
	
		-keepclassmembers class com.ironsource.sdk.controller.IronSourceWebView$JSInterface {
		    public *;
		}
		-keepclassmembers class * implements android.os.Parcelable {
		    public static final android.os.Parcelable$Creator *;
		}
		-keep public class com.google.android.gms.ads.** {
		   public *;
		}
		-keep class com.ironsource.adapters.** { *;
		}
		-dontwarn com.moat.**
		-keep class com.moat.** { public protected private *; }
	
		</insert>
	</proguardAdditions>
	
 	<resourceCopies>	
 		<copyFile src="$S(PluginDir)/../../ThirdParty/Android/mediationsdk-6.7.7.jar" dst="$S(BuildDir)/libs/mediationsdk-6.7.7.jar" />
 		<copyFile src="$S(PluginDir)/../../ThirdParty/Android/facebookadapter-4.1.1.jar" dst="$S(BuildDir)/libs/facebookadapter-4.1.1.jar" />
 		<copyFile src="$S(PluginDir)/../../ThirdParty/Android/tapjoyadapter-4.1.0.jar" dst="$S(BuildDir)/libs/tapjoyadapter-4.1.0.jar" />
 		<copyFile src="$S(PluginDir)/../../ThirdParty/Android/unityadsadapter-4.1.0.jar" dst="$S(BuildDir)/libs/unityadsadapter-4.1.0.jar" />
	</resourceCopies>

	<gameActivityImportAdditions>
		<insert>
			import android.util.Log;
			import com.ironsource.adapters.supersonicads.SupersonicConfig;
			import com.ironsource.mediationsdk.EBannerSize;
			import com.ironsource.mediationsdk.IronSource;
			import com.ironsource.mediationsdk.IronSourceBannerLayout;
			import com.ironsource.mediationsdk.integration.IntegrationHelper;
			import com.ironsource.mediationsdk.logger.IronSourceError;
			import com.ironsource.mediationsdk.model.Placement;
			import com.ironsource.mediationsdk.sdk.BannerListener;
			import com.ironsource.mediationsdk.sdk.InterstitialListener;
			import com.ironsource.mediationsdk.sdk.OfferwallListener;
			import com.ironsource.mediationsdk.sdk.RewardedVideoListener;
			import com.ironsource.mediationsdk.utils.IronSourceUtils;
		</insert>
	</gameActivityImportAdditions>

	<gameActivityClassAdditions>
		<insert>
			RewardedVideoListener mRewardedVideoListener = new RewardedVideoListener()
			{
				private native void onRewardedVideoAdOpenedThunkCpp();
				private native void onRewardedVideoAdClosedThunkCpp();
				private native void onRewardedVideoAvailabilityChangedThunkCpp(boolean available);
				private native void onRewardedVideoAdStartedThunkCpp();
				private native void onRewardedVideoAdEndedThunkCpp();
				private native void onRewardedVideoAdRewardedThunkCpp();
				private native void onRewardedVideoAdShowFailedThunkCpp(int errorCode, String errorMessage);
				private native void onRewardedVideoAdClickedThunkCpp();

				// Invoked when the RewardedVideo ad view has opened.
				// Your Activity will lose focus. Please avoid performing heavy 
				// tasks till the video ad will be closed.
				@Override
				public void onRewardedVideoAdOpened()
				{
					onRewardedVideoAdOpenedThunkCpp();
				}

				// Invoked when the RewardedVideo ad view is about to be closed.
				// Your activity will now regain its focus.
				@Override
				public void onRewardedVideoAdClosed()
				{
					onRewardedVideoAdClosedThunkCpp();
				}

				// Invoked when there is a change in the ad availability status.
				// @param - available - value will change to true when rewarded videos are available. 
				// You can then show the video by calling showRewardedVideo().
				// Value will change to false when no videos are available.
				@Override
				public void onRewardedVideoAvailabilityChanged(boolean available)
				{
					onRewardedVideoAvailabilityChangedThunkCpp(available);
				}

				// Invoked when the video ad starts playing.
				@Override
				public void onRewardedVideoAdStarted()
				{
					onRewardedVideoAdStartedThunkCpp();
				}

				// Invoked when the video ad finishes playing.
				@Override
				public void onRewardedVideoAdEnded()
				{
					onRewardedVideoAdEndedThunkCpp();
				}

				// Invoked when the user completed the video and should be rewarded. 
				// If using server-to-server callbacks you may ignore this events and wait for 
				// the callback from the Supersonic server.
				// @param - placement - the Placement the user completed a video from.
				@Override
				public void onRewardedVideoAdRewarded(Placement placement)
				{
					onRewardedVideoAdRewardedThunkCpp();
				}

				// Invoked when RewardedVideo call to show a rewarded video has failed
				@Override
			    public void onRewardedVideoAdShowFailed(IronSourceError ironSourceError)
			    {
					onRewardedVideoAdShowFailedThunkCpp(ironSourceError.getErrorCode(), ironSourceError.getErrorMessage());
				}

				@Override
				public void onRewardedVideoAdClicked(Placement placement)
				{
					onRewardedVideoAdClickedThunkCpp();
			    }
			};

			public void AndroidThunkJava_IronSource_init(String APIKey, String UserId)
			{
				Log.debug("AndroidThunkJava_IronSource_init");
				IronSource.setUserId(UserId);
				IronSource.setRewardedVideoListener(mRewardedVideoListener);
				IronSource.init(this, APIKey);
				IntegrationHelper.validateIntegration(this);
			}

			public boolean AndroidThunkJava_IronSource_hasRewardedVideo()
			{
				return IronSource.isRewardedVideoAvailable();
			}

			public String AndroidThunkJava_IronSource_getPlacementRewardName(String PlacementName)
			{
				Log.debug("AndroidThunkJava_IronSource_getPlacementRewardName");
				Placement CurrentPlacement = IronSource.getRewardedVideoPlacementInfo(PlacementName);
				if (CurrentPlacement != null)
				{
				    return CurrentPlacement.getRewardName();
				}
				else
				{
					return new String();
				}
			}

			public int AndroidThunkJava_IronSource_getPlacementRewardAmount(String PlacementName)
			{
				Log.debug("AndroidThunkJava_IronSource_getPlacementRewardAmount");
				Placement CurrentPlacement = IronSource.getRewardedVideoPlacementInfo(PlacementName);
				if (CurrentPlacement != null)
				{
				    return CurrentPlacement.getRewardAmount();
				}
				else
				{
					return 0;
				}
			}

			public boolean AndroidThunkJava_IronSource_isRewardedVideoCappedForPlacement(String PlacementName)
			{
				Log.debug("AndroidThunkJava_IronSource_isRewardedVideoCappedForPlacement");
				return IronSource.isRewardedVideoPlacementCapped(PlacementName);
			}

			public void AndroidThunkJava_IronSource_showRewardedVideo(String PlacementName)
			{
				Log.debug("AndroidThunkJava_IronSource_showRewardedVideo");
				IronSource.showRewardedVideo(PlacementName);
			}
		</insert>
	</gameActivityClassAdditions>
	
	<gameActivityOnPauseAdditions>
		IronSource.onPause(this);
	</gameActivityOnPauseAdditions>

	<gameActivityOnResumeAdditions>
		IronSource.onResume(this);
	</gameActivityOnResumeAdditions>
</root>
